{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "Added",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "Removed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "add",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "get",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "remove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "10": "contracts/ERC4671Store.sol",
    "18": "interfaces/IERC4671Store.sol",
    "2": "/home/cromewar/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/introspection/ERC165.sol",
    "3": "/home/cromewar/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/introspection/IERC165.sol"
  },
  "ast": {
    "absolutePath": "contracts/ERC4671Store.sol",
    "exportedSymbols": {
      "ERC165": [
        2106
      ],
      "ERC4671Store": [
        1781
      ],
      "IERC165": [
        2232
      ],
      "IERC4671Store": [
        2764
      ]
    },
    "id": 1782,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1571,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:10"
      },
      {
        "absolutePath": "/home/cromewar/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/introspection/ERC165.sol",
        "file": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "id": 1572,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1782,
        "sourceUnit": 2107,
        "src": "58:64:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IERC4671Store.sol",
        "file": "../interfaces/IERC4671Store.sol",
        "id": 1573,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1782,
        "sourceUnit": 2765,
        "src": "124:41:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1574,
              "name": "IERC4671Store",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2764,
              "src": "192:13:10"
            },
            "id": 1575,
            "nodeType": "InheritanceSpecifier",
            "src": "192:13:10"
          },
          {
            "baseName": {
              "id": 1576,
              "name": "ERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2106,
              "src": "207:6:10"
            },
            "id": 1577,
            "nodeType": "InheritanceSpecifier",
            "src": "207:6:10"
          }
        ],
        "canonicalName": "ERC4671Store",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1781,
        "linearizedBaseContracts": [
          1781,
          2106,
          2764,
          2232
        ],
        "name": "ERC4671Store",
        "nameLocation": "176:12:10",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1582,
            "mutability": "mutable",
            "name": "_records",
            "nameLocation": "316:8:10",
            "nodeType": "VariableDeclaration",
            "scope": 1781,
            "src": "278:46:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
              "typeString": "mapping(address => address[])"
            },
            "typeName": {
              "id": 1581,
              "keyType": {
                "id": 1578,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "286:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "278:29:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                "typeString": "mapping(address => address[])"
              },
              "valueType": {
                "baseType": {
                  "id": 1579,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "297:7:10",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "id": 1580,
                "nodeType": "ArrayTypeName",
                "src": "297:9:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1588,
            "mutability": "mutable",
            "name": "_indices",
            "nameLocation": "442:8:10",
            "nodeType": "VariableDeclaration",
            "scope": 1781,
            "src": "394:56:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 1587,
              "keyType": {
                "id": 1583,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "402:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "394:47:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 1586,
                "keyType": {
                  "id": 1584,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "421:7:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "413:27:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 1585,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "432:7:10",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              2748
            ],
            "body": {
              "id": 1627,
              "nodeType": "Block",
              "src": "661:193:10",
              "statements": [
                {
                  "assignments": [
                    1599
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1599,
                      "mutability": "mutable",
                      "name": "contracts",
                      "nameLocation": "689:9:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1627,
                      "src": "671:27:10",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1597,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "671:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1598,
                        "nodeType": "ArrayTypeName",
                        "src": "671:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1604,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1600,
                      "name": "_records",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1582,
                      "src": "701:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                        "typeString": "mapping(address => address[] storage ref)"
                      }
                    },
                    "id": 1603,
                    "indexExpression": {
                      "expression": {
                        "id": 1601,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "710:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1602,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "710:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "701:20:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "671:50:10"
                },
                {
                  "expression": {
                    "id": 1613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1605,
                          "name": "_indices",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1588,
                          "src": "731:8:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 1609,
                        "indexExpression": {
                          "expression": {
                            "id": 1606,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "740:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "740:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "731:20:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1610,
                      "indexExpression": {
                        "id": 1608,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1591,
                        "src": "752:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "731:27:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1611,
                        "name": "contracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1599,
                        "src": "761:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[] storage pointer"
                        }
                      },
                      "id": 1612,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "761:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "731:46:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1614,
                  "nodeType": "ExpressionStatement",
                  "src": "731:46:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1618,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1591,
                        "src": "802:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1615,
                        "name": "contracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1599,
                        "src": "787:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[] storage pointer"
                        }
                      },
                      "id": 1617,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "787:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 1619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "787:21:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1620,
                  "nodeType": "ExpressionStatement",
                  "src": "787:21:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1622,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "829:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "829:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1624,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1591,
                        "src": "841:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1621,
                      "name": "Added",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2736,
                      "src": "823:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 1625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "823:24:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1626,
                  "nodeType": "EmitStatement",
                  "src": "818:29:10"
                }
              ]
            },
            "documentation": {
              "id": 1589,
              "nodeType": "StructuredDocumentation",
              "src": "457:147:10",
              "text": "@notice Add a IERC4671Enumerable contract address to the caller's record\n @param token Address of the IERC4671Enumerable contract to add"
            },
            "functionSelector": "0a3b0a4f",
            "id": 1628,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "add",
            "nameLocation": "618:3:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1593,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "652:8:10"
            },
            "parameters": {
              "id": 1592,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1591,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "630:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1628,
                  "src": "622:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1590,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "622:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "621:15:10"
            },
            "returnParameters": {
              "id": 1594,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "661:0:10"
            },
            "scope": 1781,
            "src": "609:245:10",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2754
            ],
            "body": {
              "id": 1707,
              "nodeType": "Block",
              "src": "1067:451:10",
              "statements": [
                {
                  "assignments": [
                    1636
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1636,
                      "mutability": "mutable",
                      "name": "index",
                      "nameLocation": "1085:5:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1707,
                      "src": "1077:13:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1635,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1077:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1642,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1638,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1115:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1115:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1640,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1631,
                        "src": "1127:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1637,
                      "name": "_indexOfTokenOrRevert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1780,
                      "src": "1093:21:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view returns (uint256)"
                      }
                    },
                    "id": 1641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1093:40:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1077:56:10"
                },
                {
                  "assignments": [
                    1647
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1647,
                      "mutability": "mutable",
                      "name": "contracts",
                      "nameLocation": "1161:9:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1707,
                      "src": "1143:27:10",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1645,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1143:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1646,
                        "nodeType": "ArrayTypeName",
                        "src": "1143:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1652,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1648,
                      "name": "_records",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1582,
                      "src": "1173:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                        "typeString": "mapping(address => address[] storage ref)"
                      }
                    },
                    "id": 1651,
                    "indexExpression": {
                      "expression": {
                        "id": 1649,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1182:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1650,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1182:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1173:20:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1143:50:10"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1653,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1636,
                      "src": "1207:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1657,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1654,
                          "name": "contracts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1647,
                          "src": "1216:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[] storage pointer"
                          }
                        },
                        "id": 1655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1216:16:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 1656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1235:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "1216:20:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1207:29:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1683,
                    "nodeType": "Block",
                    "src": "1300:86:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 1681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1669,
                                "name": "_indices",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1588,
                                "src": "1314:8:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 1678,
                              "indexExpression": {
                                "expression": {
                                  "id": 1670,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1323:3:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1671,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1323:10:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1314:20:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1679,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 1672,
                                "name": "contracts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1647,
                                "src": "1335:9:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                  "typeString": "address[] storage pointer"
                                }
                              },
                              "id": 1677,
                              "indexExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1676,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1673,
                                    "name": "contracts",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1647,
                                    "src": "1345:9:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                      "typeString": "address[] storage pointer"
                                    }
                                  },
                                  "id": 1674,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "1345:16:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 1675,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1364:1:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "1345:20:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1335:31:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1314:53:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1680,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1636,
                            "src": "1370:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1314:61:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1682,
                        "nodeType": "ExpressionStatement",
                        "src": "1314:61:10"
                      }
                    ]
                  },
                  "id": 1684,
                  "nodeType": "IfStatement",
                  "src": "1203:183:10",
                  "trueBody": {
                    "id": 1668,
                    "nodeType": "Block",
                    "src": "1238:56:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 1666,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1659,
                                "name": "_indices",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1588,
                                "src": "1252:8:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 1663,
                              "indexExpression": {
                                "expression": {
                                  "id": 1660,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1261:3:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1661,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1261:10:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1252:20:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1664,
                            "indexExpression": {
                              "id": 1662,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1631,
                              "src": "1273:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1252:27:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1665,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1282:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1252:31:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1667,
                        "nodeType": "ExpressionStatement",
                        "src": "1252:31:10"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1685,
                        "name": "contracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1647,
                        "src": "1395:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[] storage pointer"
                        }
                      },
                      "id": 1687,
                      "indexExpression": {
                        "id": 1686,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1636,
                        "src": "1405:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1395:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 1688,
                        "name": "contracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1647,
                        "src": "1414:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[] storage pointer"
                        }
                      },
                      "id": 1693,
                      "indexExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1689,
                            "name": "contracts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1647,
                            "src": "1424:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                              "typeString": "address[] storage pointer"
                            }
                          },
                          "id": 1690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1424:16:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 1691,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1443:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "1424:20:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1414:31:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1395:50:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1695,
                  "nodeType": "ExpressionStatement",
                  "src": "1395:50:10"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1696,
                        "name": "contracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1647,
                        "src": "1455:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[] storage pointer"
                        }
                      },
                      "id": 1698,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "pop",
                      "nodeType": "MemberAccess",
                      "src": "1455:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer)"
                      }
                    },
                    "id": 1699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1455:15:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1700,
                  "nodeType": "ExpressionStatement",
                  "src": "1455:15:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1702,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1493:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1493:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1704,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1631,
                        "src": "1505:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1701,
                      "name": "Removed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2742,
                      "src": "1485:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 1705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1485:26:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1706,
                  "nodeType": "EmitStatement",
                  "src": "1480:31:10"
                }
              ]
            },
            "documentation": {
              "id": 1629,
              "nodeType": "StructuredDocumentation",
              "src": "860:147:10",
              "text": "@notice Remove a IERC4671Enumerable contract from the caller's record\n @param token Address of the IERC4671Enumerable contract to remove"
            },
            "functionSelector": "29092d0e",
            "id": 1708,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "remove",
            "nameLocation": "1021:6:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1633,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1058:8:10"
            },
            "parameters": {
              "id": 1632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1631,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1036:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1708,
                  "src": "1028:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1630,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1028:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1027:15:10"
            },
            "returnParameters": {
              "id": 1634,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1067:0:10"
            },
            "scope": 1781,
            "src": "1012:506:10",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2763
            ],
            "body": {
              "id": 1722,
              "nodeType": "Block",
              "src": "1811:39:10",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1718,
                      "name": "_records",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1582,
                      "src": "1828:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                        "typeString": "mapping(address => address[] storage ref)"
                      }
                    },
                    "id": 1720,
                    "indexExpression": {
                      "id": 1719,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1711,
                      "src": "1837:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1828:15:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 1717,
                  "id": 1721,
                  "nodeType": "Return",
                  "src": "1821:22:10"
                }
              ]
            },
            "documentation": {
              "id": 1709,
              "nodeType": "StructuredDocumentation",
              "src": "1524:154:10",
              "text": "@notice Get all the IERC4671Enumerable contracts for a given owner\n @param owner Address for which to retrieve the IERC4671Enumerable contracts"
            },
            "functionSelector": "c2bc2efc",
            "id": 1723,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "get",
            "nameLocation": "1692:3:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1713,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1763:8:10"
            },
            "parameters": {
              "id": 1712,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1711,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1704:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1723,
                  "src": "1696:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1710,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1696:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1695:15:10"
            },
            "returnParameters": {
              "id": 1717,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1716,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1723,
                  "src": "1789:16:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1714,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1789:7:10",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1715,
                    "nodeType": "ArrayTypeName",
                    "src": "1789:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1788:18:10"
            },
            "scope": 1781,
            "src": "1683:167:10",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2105,
              2231
            ],
            "body": {
              "id": 1745,
              "nodeType": "Block",
              "src": "2008:134:10",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 1738,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1733,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1725,
                        "src": "2037:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1735,
                              "name": "IERC4671Store",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2764,
                              "src": "2057:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC4671Store_$2764_$",
                                "typeString": "type(contract IERC4671Store)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC4671Store_$2764_$",
                                "typeString": "type(contract IERC4671Store)"
                              }
                            ],
                            "id": 1734,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "2052:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 1736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2052:19:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC4671Store_$2764",
                            "typeString": "type(contract IERC4671Store)"
                          }
                        },
                        "id": 1737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "2052:31:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "2037:46:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 1741,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1725,
                          "src": "2123:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 1739,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "2099:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_ERC4671Store_$1781_$",
                            "typeString": "type(contract super ERC4671Store)"
                          }
                        },
                        "id": 1740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2105,
                        "src": "2099:23:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 1742,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2099:36:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2037:98:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1732,
                  "id": 1744,
                  "nodeType": "Return",
                  "src": "2018:117:10"
                }
              ]
            },
            "functionSelector": "01ffc9a7",
            "id": 1746,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "1865:17:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1729,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 1727,
                  "name": "ERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2106,
                  "src": "1964:6:10"
                },
                {
                  "id": 1728,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2232,
                  "src": "1972:7:10"
                }
              ],
              "src": "1955:25:10"
            },
            "parameters": {
              "id": 1726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1725,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1890:11:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1746,
                  "src": "1883:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 1724,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1883:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1882:20:10"
            },
            "returnParameters": {
              "id": 1732,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1731,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1746,
                  "src": "1998:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1730,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1998:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1997:6:10"
            },
            "scope": 1781,
            "src": "1856:286:10",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1779,
              "nodeType": "Block",
              "src": "2268:156:10",
              "statements": [
                {
                  "assignments": [
                    1756
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1756,
                      "mutability": "mutable",
                      "name": "index",
                      "nameLocation": "2286:5:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1779,
                      "src": "2278:13:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1755,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2278:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1762,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 1757,
                        "name": "_indices",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1588,
                        "src": "2294:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 1759,
                      "indexExpression": {
                        "id": 1758,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1748,
                        "src": "2303:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2294:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1761,
                    "indexExpression": {
                      "id": 1760,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1750,
                      "src": "2310:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2294:22:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2278:38:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1766,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1764,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1756,
                            "src": "2334:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1765,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2342:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2334:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1767,
                                "name": "_records",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1582,
                                "src": "2347:8:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                                  "typeString": "mapping(address => address[] storage ref)"
                                }
                              },
                              "id": 1769,
                              "indexExpression": {
                                "id": 1768,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1748,
                                "src": "2356:5:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2347:15:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1770,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "2347:22:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1771,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2372:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2347:26:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2334:39:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41646472657373206e6f7420666f756e64",
                        "id": 1774,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2375:19:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f8d3e2e0298406947d6757c4b82b0eb092c7071dfb54130b8621caad1f91197a",
                          "typeString": "literal_string \"Address not found\""
                        },
                        "value": "Address not found"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f8d3e2e0298406947d6757c4b82b0eb092c7071dfb54130b8621caad1f91197a",
                          "typeString": "literal_string \"Address not found\""
                        }
                      ],
                      "id": 1763,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2326:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2326:69:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1776,
                  "nodeType": "ExpressionStatement",
                  "src": "2326:69:10"
                },
                {
                  "expression": {
                    "id": 1777,
                    "name": "index",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1756,
                    "src": "2412:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1754,
                  "id": 1778,
                  "nodeType": "Return",
                  "src": "2405:12:10"
                }
              ]
            },
            "id": 1780,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_indexOfTokenOrRevert",
            "nameLocation": "2157:21:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1751,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1748,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "2187:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1780,
                  "src": "2179:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1747,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2179:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1750,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "2202:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1780,
                  "src": "2194:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1749,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2194:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2178:30:10"
            },
            "returnParameters": {
              "id": 1754,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1753,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1780,
                  "src": "2255:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1752,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2255:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2254:9:10"
            },
            "scope": 1781,
            "src": "2148:276:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 1782,
        "src": "167:2264:10",
        "usedErrors": []
      }
    ],
    "src": "33:2399:10"
  },
  "bytecode": "608060405234801561001057600080fd5b5061056e806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806301ffc9a7146100515780630a3b0a4f1461007957806329092d0e1461008e578063c2bc2efc146100a1575b600080fd5b61006461005f366004610447565b6100c1565b60405190151581526020015b60405180910390f35b61008c610087366004610471565b6100f8565b005b61008c61009c366004610471565b610181565b6100b46100af366004610471565b61033b565b604051610070919061049a565b60006001600160e01b0319821663e18e09bd60e01b14806100f257506301ffc9a760e01b6001600160e01b03198316145b92915050565b33600081815260208181526040808320805460018085528386206001600160a01b0389168088529086528487208390559082018355828652948490200180546001600160a01b03191685179055815194855291840192909252917f938c63ac3d228b23f6bee7618fefc6790522e338ac202c958a2ea9eb9706c5d1910160405180910390a15050565b600061018d33836103af565b3360009081526020819052604090208054919250906101ae906001906104e7565b8214156101de573360009081526001602090815260408083206001600160a01b0387168452909152812055610237565b3360009081526001602081905260408220835485939192859161020191906104e7565b815481106102115761021161050c565b60009182526020808320909101546001600160a01b031683528201929092526040019020555b80548190610247906001906104e7565b815481106102575761025761050c565b9060005260206000200160009054906101000a90046001600160a01b03168183815481106102875761028761050c565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550808054806102c5576102c5610522565b600082815260209020810160001990810180546001600160a01b03191690550190556040517f40e634d0e26d9ec2e860e4dd9b7b2cfbb569b6058362a1a54d3a94718bc495879061032e90339086906001600160a01b0392831681529116602082015260400190565b60405180910390a1505050565b6001600160a01b038116600090815260208181526040918290208054835181840281018401909452808452606093928301828280156103a357602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610385575b50505050509050919050565b6001600160a01b038083166000908152600160209081526040808320938516835292905290812054801515806103fc57506001600160a01b03841660009081526020819052604090205415155b6104405760405162461bcd60e51b81526020600482015260116024820152701059191c995cdcc81b9bdd08199bdd5b99607a1b604482015260640160405180910390fd5b9392505050565b60006020828403121561045957600080fd5b81356001600160e01b03198116811461044057600080fd5b60006020828403121561048357600080fd5b81356001600160a01b038116811461044057600080fd5b6020808252825182820181905260009190848201906040850190845b818110156104db5783516001600160a01b0316835292840192918401916001016104b6565b50909695505050505050565b60008282101561050757634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fdfea26469706673582212208d9dfa123ffab9e71faa0814e3bde4e4c1c76c861142e6cad7b01d18990c729764736f6c634300080b0033",
  "bytecodeSha1": "534f2d07d9a164ba052b82b9bec879268197f696",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "ERC4671Store",
  "coverageMap": {
    "branches": {
      "10": {
        "ERC4671Store._indexOfTokenOrRevert": {
          "14": [
            2334,
            2343,
            true
          ],
          "15": [
            2347,
            2373,
            true
          ]
        },
        "ERC4671Store.remove": {
          "13": [
            1207,
            1236,
            false
          ]
        }
      },
      "18": {},
      "2": {},
      "3": {}
    },
    "statements": {
      "10": {
        "ERC4671Store._indexOfTokenOrRevert": {
          "11": [
            2326,
            2395
          ],
          "12": [
            2405,
            2417
          ]
        },
        "ERC4671Store.add": {
          "2": [
            731,
            777
          ],
          "3": [
            787,
            808
          ],
          "4": [
            818,
            847
          ]
        },
        "ERC4671Store.get": {
          "10": [
            1821,
            1843
          ]
        },
        "ERC4671Store.remove": {
          "5": [
            1252,
            1283
          ],
          "6": [
            1314,
            1375
          ],
          "7": [
            1395,
            1445
          ],
          "8": [
            1455,
            1470
          ],
          "9": [
            1480,
            1511
          ]
        },
        "ERC4671Store.supportsInterface": {
          "0": [
            2018,
            2135
          ]
        }
      },
      "18": {},
      "2": {
        "ERC165.supportsInterface": {
          "1": [
            930,
            977
          ]
        }
      },
      "3": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC165",
    "IERC4671Store"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061004c5760003560e01c806301ffc9a7146100515780630a3b0a4f1461007957806329092d0e1461008e578063c2bc2efc146100a1575b600080fd5b61006461005f366004610447565b6100c1565b60405190151581526020015b60405180910390f35b61008c610087366004610471565b6100f8565b005b61008c61009c366004610471565b610181565b6100b46100af366004610471565b61033b565b604051610070919061049a565b60006001600160e01b0319821663e18e09bd60e01b14806100f257506301ffc9a760e01b6001600160e01b03198316145b92915050565b33600081815260208181526040808320805460018085528386206001600160a01b0389168088529086528487208390559082018355828652948490200180546001600160a01b03191685179055815194855291840192909252917f938c63ac3d228b23f6bee7618fefc6790522e338ac202c958a2ea9eb9706c5d1910160405180910390a15050565b600061018d33836103af565b3360009081526020819052604090208054919250906101ae906001906104e7565b8214156101de573360009081526001602090815260408083206001600160a01b0387168452909152812055610237565b3360009081526001602081905260408220835485939192859161020191906104e7565b815481106102115761021161050c565b60009182526020808320909101546001600160a01b031683528201929092526040019020555b80548190610247906001906104e7565b815481106102575761025761050c565b9060005260206000200160009054906101000a90046001600160a01b03168183815481106102875761028761050c565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550808054806102c5576102c5610522565b600082815260209020810160001990810180546001600160a01b03191690550190556040517f40e634d0e26d9ec2e860e4dd9b7b2cfbb569b6058362a1a54d3a94718bc495879061032e90339086906001600160a01b0392831681529116602082015260400190565b60405180910390a1505050565b6001600160a01b038116600090815260208181526040918290208054835181840281018401909452808452606093928301828280156103a357602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610385575b50505050509050919050565b6001600160a01b038083166000908152600160209081526040808320938516835292905290812054801515806103fc57506001600160a01b03841660009081526020819052604090205415155b6104405760405162461bcd60e51b81526020600482015260116024820152701059191c995cdcc81b9bdd08199bdd5b99607a1b604482015260640160405180910390fd5b9392505050565b60006020828403121561045957600080fd5b81356001600160e01b03198116811461044057600080fd5b60006020828403121561048357600080fd5b81356001600160a01b038116811461044057600080fd5b6020808252825182820181905260009190848201906040850190845b818110156104db5783516001600160a01b0316835292840192918401916001016104b6565b50909695505050505050565b60008282101561050757634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fdfea26469706673582212208d9dfa123ffab9e71faa0814e3bde4e4c1c76c861142e6cad7b01d18990c729764736f6c634300080b0033",
  "deployedSourceMap": "167:2264:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1856:286;;;;;;:::i;:::-;;:::i;:::-;;;470:14:19;;463:22;445:41;;433:2;418:18;1856:286:10;;;;;;;;609:245;;;;;;:::i;:::-;;:::i;:::-;;1012:506;;;;;;:::i;:::-;;:::i;1683:167::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1856:286::-;1998:4;-1:-1:-1;;;;;;2037:46:10;;-1:-1:-1;;;2037:46:10;;:98;;-1:-1:-1;;;;;;;;;;937:40:2;;;2099:36:10;2018:117;1856:286;-1:-1:-1;;1856:286:10:o;609:245::-;710:10;671:27;701:20;;;;;;;;;;;761:16;;731:8;:20;;;;;;-1:-1:-1;;;;;731:27:10;;;;;;;;;;;:46;;;787:21;;;;;;;;;;;;;;;-1:-1:-1;;;;;;787:21:10;;;;;823:24;;1663:34:19;;;1713:18;;;1706:43;;;;701:20:10;823:24;;1598:18:19;823:24:10;;;;;;;661:193;609:245;:::o;1012:506::-;1077:13;1093:40;1115:10;1127:5;1093:21;:40::i;:::-;1182:10;1143:27;1173:20;;;;;;;;;;1216:16;;1077:56;;-1:-1:-1;1173:20:10;1216;;1235:1;;1216:20;:::i;:::-;1207:5;:29;1203:183;;;1261:10;1282:1;1252:20;;;:8;:20;;;;;;;;-1:-1:-1;;;;;1252:27:10;;;;;;;;;:31;1203:183;;;1323:10;1314:20;;;;:8;:20;;;;;;;1345:16;;1370:5;;1314:20;;1335:9;;1345:20;;1314:8;1345:20;:::i;:::-;1335:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1335:31:10;1314:53;;;;;;;;;;;;:61;1203:183;1424:16;;1414:9;;1424:20;;1443:1;;1424:20;:::i;:::-;1414:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1414:31:10;1395:9;1405:5;1395:16;;;;;;;;:::i;:::-;;;;;;;;;:50;;;;;-1:-1:-1;;;;;1395:50:10;;;;;-1:-1:-1;;;;;1395:50:10;;;;;;1455:9;:15;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;1455:15:10;;;;;-1:-1:-1;;;;;;1455:15:10;;;;;;1485:26;;;;;;1493:10;;1505:5;;-1:-1:-1;;;;;1681:15:19;;;1663:34;;1733:15;;1728:2;1713:18;;1706:43;1613:2;1598:18;;1451:304;1485:26:10;;;;;;;;1067:451;;1012:506;:::o;1683:167::-;-1:-1:-1;;;;;1828:15:10;;:8;:15;;;;;;;;;;;;1821:22;;;;;;;;;;;;;;;;;1789:16;;1821:22;;;1828:15;1821:22;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1821:22:10;;;;;;;;;;;;;;;;;;;;;;;1683:167;;;:::o;2148:276::-;-1:-1:-1;;;;;2294:15:10;;;2255:7;2294:15;;;:8;:15;;;;;;;;:22;;;;;;;;;;;;2334:9;;;;:39;;-1:-1:-1;;;;;;2347:15:10;;2372:1;2347:15;;;;;;;;;;:22;:26;;2334:39;2326:69;;;;-1:-1:-1;;;2326:69:10;;2453:2:19;2326:69:10;;;2435:21:19;2492:2;2472:18;;;2465:30;-1:-1:-1;;;2511:18:19;;;2504:47;2568:18;;2326:69:10;;;;;;;;2412:5;2148:276;-1:-1:-1;;;2148:276:10:o;14:286:19:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:19;;209:43;;199:71;;266:1;263;256:12;497:286;556:6;609:2;597:9;588:7;584:23;580:32;577:52;;;625:1;622;615:12;577:52;651:23;;-1:-1:-1;;;;;703:31:19;;693:42;;683:70;;749:1;746;739:12;788:658;959:2;1011:21;;;1081:13;;984:18;;;1103:22;;;930:4;;959:2;1182:15;;;;1156:2;1141:18;;;930:4;1225:195;1239:6;1236:1;1233:13;1225:195;;;1304:13;;-1:-1:-1;;;;;1300:39:19;1288:52;;1395:15;;;;1360:12;;;;1336:1;1254:9;1225:195;;;-1:-1:-1;1437:3:19;;788:658;-1:-1:-1;;;;;;788:658:19:o;1760:222::-;1800:4;1828:1;1825;1822:8;1819:131;;;1872:10;1867:3;1863:20;1860:1;1853:31;1907:4;1904:1;1897:15;1935:4;1932:1;1925:15;1819:131;-1:-1:-1;1967:9:19;;1760:222::o;1987:127::-;2048:10;2043:3;2039:20;2036:1;2029:31;2079:4;2076:1;2069:15;2103:4;2100:1;2093:15;2119:127;2180:10;2175:3;2171:20;2168:1;2161:31;2211:4;2208:1;2201:15;2235:4;2232:1;2225:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "add(address)": {
        "notice": "Add a IERC4671Enumerable contract address to the caller's record",
        "params": {
          "token": "Address of the IERC4671Enumerable contract to add"
        }
      },
      "get(address)": {
        "notice": "Get all the IERC4671Enumerable contracts for a given owner",
        "params": {
          "owner": "Address for which to retrieve the IERC4671Enumerable contracts"
        }
      },
      "remove(address)": {
        "notice": "Remove a IERC4671Enumerable contract from the caller's record",
        "params": {
          "token": "Address of the IERC4671Enumerable contract to remove"
        }
      }
    },
    "version": 1
  },
  "offset": [
    167,
    2431
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0xA3B0A4F EQ PUSH2 0x79 JUMPI DUP1 PUSH4 0x29092D0E EQ PUSH2 0x8E JUMPI DUP1 PUSH4 0xC2BC2EFC EQ PUSH2 0xA1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x447 JUMP JUMPDEST PUSH2 0xC1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8C PUSH2 0x87 CALLDATASIZE PUSH1 0x4 PUSH2 0x471 JUMP JUMPDEST PUSH2 0xF8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8C PUSH2 0x9C CALLDATASIZE PUSH1 0x4 PUSH2 0x471 JUMP JUMPDEST PUSH2 0x181 JUMP JUMPDEST PUSH2 0xB4 PUSH2 0xAF CALLDATASIZE PUSH1 0x4 PUSH2 0x471 JUMP JUMPDEST PUSH2 0x33B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x70 SWAP2 SWAP1 PUSH2 0x49A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0xE18E09BD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0xF2 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 DUP6 MSTORE DUP4 DUP7 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP1 DUP9 MSTORE SWAP1 DUP7 MSTORE DUP5 DUP8 KECCAK256 DUP4 SWAP1 SSTORE SWAP1 DUP3 ADD DUP4 SSTORE DUP3 DUP7 MSTORE SWAP5 DUP5 SWAP1 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP6 OR SWAP1 SSTORE DUP2 MLOAD SWAP5 DUP6 MSTORE SWAP2 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 PUSH32 0x938C63AC3D228B23F6BEE7618FEFC6790522E338AC202C958A2EA9EB9706C5D1 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18D CALLER DUP4 PUSH2 0x3AF JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x1AE SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x4E7 JUMP JUMPDEST DUP3 EQ ISZERO PUSH2 0x1DE JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SSTORE PUSH2 0x237 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP4 SLOAD DUP6 SWAP4 SWAP2 SWAP3 DUP6 SWAP2 PUSH2 0x201 SWAP2 SWAP1 PUSH2 0x4E7 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x211 JUMPI PUSH2 0x211 PUSH2 0x50C JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SSTORE JUMPDEST DUP1 SLOAD DUP2 SWAP1 PUSH2 0x247 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x4E7 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x257 JUMPI PUSH2 0x257 PUSH2 0x50C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x287 JUMPI PUSH2 0x287 PUSH2 0x50C JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP1 DUP1 SLOAD DUP1 PUSH2 0x2C5 JUMPI PUSH2 0x2C5 PUSH2 0x522 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP2 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE ADD SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x40E634D0E26D9EC2E860E4DD9B7B2CFBB569B6058362A1A54D3A94718BC49587 SWAP1 PUSH2 0x32E SWAP1 CALLER SWAP1 DUP7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x3A3 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x385 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP6 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 SLOAD DUP1 ISZERO ISZERO DUP1 PUSH2 0x3FC JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO JUMPDEST PUSH2 0x440 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x1059191C995CDCC81B9BDD08199BDD5B99 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x459 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x440 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x483 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x440 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4DB JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x4B6 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x507 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 SWAP14 STATICCALL SLT EXTCODEHASH STATICCALL 0xB9 0xE7 0x1F 0xAA ADDMOD EQ 0xE3 0xBD 0xE4 0xE4 0xC1 0xC7 PUSH13 0x861142E6CAD7B01D18990C7297 PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        167,
        2431
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        167,
        2431
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        167,
        2431
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5": {
      "fn": null,
      "offset": [
        167,
        2431
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "6": {
      "fn": null,
      "offset": [
        167,
        2431
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7": {
      "fn": null,
      "offset": [
        167,
        2431
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "8": {
      "fn": null,
      "offset": [
        167,
        2431
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        167,
        2431
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "12": {
      "fn": null,
      "offset": [
        167,
        2431
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        167,
        2431
      ],
      "op": "DUP1",
      "path": "10"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        167,
        2431
      ],
      "op": "REVERT",
      "path": "10"
    },
    "16": {
      "fn": null,
      "offset": [
        167,
        2431
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "17": {
      "fn": null,
      "offset": [
        167,
        2431
      ],
      "op": "POP",
      "path": "10"
    },
    "18": {
      "fn": null,
      "offset": [
        167,
        2431
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        167,
        2431
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "21": {
      "fn": null,
      "offset": [
        167,
        2431
      ],
      "op": "LT",
      "path": "10"
    },
    "22": {
      "fn": null,
      "offset": [
        167,
        2431
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4C"
    },
    "25": {
      "fn": null,
      "offset": [
        167,
        2431
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "26": {
      "fn": null,
      "offset": [
        167,
        2431
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        167,
        2431
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "29": {
      "fn": null,
      "offset": [
        167,
        2431
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        167,
        2431
      ],
      "op": "SHR",
      "path": "10"
    },
    "32": {
      "fn": null,
      "offset": [
        167,
        2431
      ],
      "op": "DUP1",
      "path": "10"
    },
    "33": {
      "fn": null,
      "offset": [
        167,
        2431
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x1FFC9A7"
    },
    "38": {
      "fn": null,
      "offset": [
        167,
        2431
      ],
      "op": "EQ",
      "path": "10"
    },
    "39": {
      "fn": null,
      "offset": [
        167,
        2431
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x51"
    },
    "42": {
      "fn": null,
      "offset": [
        167,
        2431
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "43": {
      "fn": null,
      "offset": [
        167,
        2431
      ],
      "op": "DUP1",
      "path": "10"
    },
    "44": {
      "fn": null,
      "offset": [
        167,
        2431
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xA3B0A4F"
    },
    "49": {
      "fn": null,
      "offset": [
        167,
        2431
      ],
      "op": "EQ",
      "path": "10"
    },
    "50": {
      "fn": null,
      "offset": [
        167,
        2431
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x79"
    },
    "53": {
      "fn": null,
      "offset": [
        167,
        2431
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "54": {
      "fn": null,
      "offset": [
        167,
        2431
      ],
      "op": "DUP1",
      "path": "10"
    },
    "55": {
      "fn": null,
      "offset": [
        167,
        2431
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x29092D0E"
    },
    "60": {
      "fn": null,
      "offset": [
        167,
        2431
      ],
      "op": "EQ",
      "path": "10"
    },
    "61": {
      "fn": null,
      "offset": [
        167,
        2431
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x8E"
    },
    "64": {
      "fn": null,
      "offset": [
        167,
        2431
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "65": {
      "fn": null,
      "offset": [
        167,
        2431
      ],
      "op": "DUP1",
      "path": "10"
    },
    "66": {
      "fn": null,
      "offset": [
        167,
        2431
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xC2BC2EFC"
    },
    "71": {
      "fn": null,
      "offset": [
        167,
        2431
      ],
      "op": "EQ",
      "path": "10"
    },
    "72": {
      "fn": null,
      "offset": [
        167,
        2431
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA1"
    },
    "75": {
      "fn": null,
      "offset": [
        167,
        2431
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "76": {
      "fn": null,
      "offset": [
        167,
        2431
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "77": {
      "fn": null,
      "offset": [
        167,
        2431
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "79": {
      "fn": null,
      "offset": [
        167,
        2431
      ],
      "op": "DUP1",
      "path": "10"
    },
    "80": {
      "first_revert": true,
      "fn": null,
      "offset": [
        167,
        2431
      ],
      "op": "REVERT",
      "path": "10"
    },
    "81": {
      "fn": "ERC4671Store.supportsInterface",
      "offset": [
        1856,
        2142
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "82": {
      "fn": "ERC4671Store.supportsInterface",
      "offset": [
        1856,
        2142
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x64"
    },
    "85": {
      "fn": "ERC4671Store.supportsInterface",
      "offset": [
        1856,
        2142
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5F"
    },
    "88": {
      "fn": "ERC4671Store.supportsInterface",
      "offset": [
        1856,
        2142
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "89": {
      "fn": "ERC4671Store.supportsInterface",
      "offset": [
        1856,
        2142
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "91": {
      "fn": "ERC4671Store.supportsInterface",
      "offset": [
        1856,
        2142
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x447"
    },
    "94": {
      "fn": "ERC4671Store.supportsInterface",
      "jump": "i",
      "offset": [
        1856,
        2142
      ],
      "op": "JUMP",
      "path": "10"
    },
    "95": {
      "fn": "ERC4671Store.supportsInterface",
      "offset": [
        1856,
        2142
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "96": {
      "fn": "ERC4671Store.supportsInterface",
      "offset": [
        1856,
        2142
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC1"
    },
    "99": {
      "fn": "ERC4671Store.supportsInterface",
      "jump": "i",
      "offset": [
        1856,
        2142
      ],
      "op": "JUMP",
      "path": "10"
    },
    "100": {
      "fn": "ERC4671Store.supportsInterface",
      "offset": [
        1856,
        2142
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "101": {
      "fn": "ERC4671Store.supportsInterface",
      "offset": [
        1856,
        2142
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "103": {
      "fn": "ERC4671Store.supportsInterface",
      "offset": [
        1856,
        2142
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "104": {
      "op": "SWAP1"
    },
    "105": {
      "op": "ISZERO"
    },
    "106": {
      "op": "ISZERO"
    },
    "107": {
      "op": "DUP2"
    },
    "108": {
      "op": "MSTORE"
    },
    "109": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "111": {
      "op": "ADD"
    },
    "112": {
      "fn": "ERC4671Store.supportsInterface",
      "offset": [
        1856,
        2142
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "113": {
      "fn": "ERC4671Store.supportsInterface",
      "offset": [
        1856,
        2142
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "115": {
      "fn": "ERC4671Store.supportsInterface",
      "offset": [
        1856,
        2142
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "116": {
      "fn": "ERC4671Store.supportsInterface",
      "offset": [
        1856,
        2142
      ],
      "op": "DUP1",
      "path": "10"
    },
    "117": {
      "fn": "ERC4671Store.supportsInterface",
      "offset": [
        1856,
        2142
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "118": {
      "fn": "ERC4671Store.supportsInterface",
      "offset": [
        1856,
        2142
      ],
      "op": "SUB",
      "path": "10"
    },
    "119": {
      "fn": "ERC4671Store.supportsInterface",
      "offset": [
        1856,
        2142
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "120": {
      "fn": "ERC4671Store.supportsInterface",
      "offset": [
        1856,
        2142
      ],
      "op": "RETURN",
      "path": "10"
    },
    "121": {
      "fn": "ERC4671Store.add",
      "offset": [
        609,
        854
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "122": {
      "fn": "ERC4671Store.add",
      "offset": [
        609,
        854
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x8C"
    },
    "125": {
      "fn": "ERC4671Store.add",
      "offset": [
        609,
        854
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x87"
    },
    "128": {
      "fn": "ERC4671Store.add",
      "offset": [
        609,
        854
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "129": {
      "fn": "ERC4671Store.add",
      "offset": [
        609,
        854
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "131": {
      "fn": "ERC4671Store.add",
      "offset": [
        609,
        854
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x471"
    },
    "134": {
      "fn": "ERC4671Store.add",
      "jump": "i",
      "offset": [
        609,
        854
      ],
      "op": "JUMP",
      "path": "10"
    },
    "135": {
      "fn": "ERC4671Store.add",
      "offset": [
        609,
        854
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "136": {
      "fn": "ERC4671Store.add",
      "offset": [
        609,
        854
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF8"
    },
    "139": {
      "fn": "ERC4671Store.add",
      "jump": "i",
      "offset": [
        609,
        854
      ],
      "op": "JUMP",
      "path": "10"
    },
    "140": {
      "fn": "ERC4671Store.add",
      "offset": [
        609,
        854
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "141": {
      "fn": "ERC4671Store.add",
      "offset": [
        609,
        854
      ],
      "op": "STOP",
      "path": "10"
    },
    "142": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1012,
        1518
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "143": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1012,
        1518
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x8C"
    },
    "146": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1012,
        1518
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x9C"
    },
    "149": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1012,
        1518
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "150": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1012,
        1518
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "152": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1012,
        1518
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x471"
    },
    "155": {
      "fn": "ERC4671Store.remove",
      "jump": "i",
      "offset": [
        1012,
        1518
      ],
      "op": "JUMP",
      "path": "10"
    },
    "156": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1012,
        1518
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "157": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1012,
        1518
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x181"
    },
    "160": {
      "fn": "ERC4671Store.remove",
      "jump": "i",
      "offset": [
        1012,
        1518
      ],
      "op": "JUMP",
      "path": "10"
    },
    "161": {
      "fn": "ERC4671Store.get",
      "offset": [
        1683,
        1850
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "162": {
      "fn": "ERC4671Store.get",
      "offset": [
        1683,
        1850
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB4"
    },
    "165": {
      "fn": "ERC4671Store.get",
      "offset": [
        1683,
        1850
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xAF"
    },
    "168": {
      "fn": "ERC4671Store.get",
      "offset": [
        1683,
        1850
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "169": {
      "fn": "ERC4671Store.get",
      "offset": [
        1683,
        1850
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "171": {
      "fn": "ERC4671Store.get",
      "offset": [
        1683,
        1850
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x471"
    },
    "174": {
      "fn": "ERC4671Store.get",
      "jump": "i",
      "offset": [
        1683,
        1850
      ],
      "op": "JUMP",
      "path": "10"
    },
    "175": {
      "fn": "ERC4671Store.get",
      "offset": [
        1683,
        1850
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "176": {
      "fn": "ERC4671Store.get",
      "offset": [
        1683,
        1850
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x33B"
    },
    "179": {
      "fn": "ERC4671Store.get",
      "jump": "i",
      "offset": [
        1683,
        1850
      ],
      "op": "JUMP",
      "path": "10"
    },
    "180": {
      "fn": "ERC4671Store.get",
      "offset": [
        1683,
        1850
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "181": {
      "fn": "ERC4671Store.get",
      "offset": [
        1683,
        1850
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "183": {
      "fn": "ERC4671Store.get",
      "offset": [
        1683,
        1850
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "184": {
      "fn": "ERC4671Store.get",
      "offset": [
        1683,
        1850
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x70"
    },
    "187": {
      "fn": "ERC4671Store.get",
      "offset": [
        1683,
        1850
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "188": {
      "fn": "ERC4671Store.get",
      "offset": [
        1683,
        1850
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "189": {
      "fn": "ERC4671Store.get",
      "offset": [
        1683,
        1850
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x49A"
    },
    "192": {
      "fn": "ERC4671Store.get",
      "jump": "i",
      "offset": [
        1683,
        1850
      ],
      "op": "JUMP",
      "path": "10"
    },
    "193": {
      "fn": "ERC4671Store.supportsInterface",
      "offset": [
        1856,
        2142
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "194": {
      "fn": "ERC4671Store.supportsInterface",
      "offset": [
        1998,
        2002
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "196": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "200": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "202": {
      "op": "SHL"
    },
    "203": {
      "op": "SUB"
    },
    "204": {
      "op": "NOT"
    },
    "205": {
      "fn": "ERC4671Store.supportsInterface",
      "offset": [
        2037,
        2083
      ],
      "op": "DUP3",
      "path": "10",
      "statement": 0
    },
    "206": {
      "fn": "ERC4671Store.supportsInterface",
      "offset": [
        2037,
        2083
      ],
      "op": "AND",
      "path": "10"
    },
    "207": {
      "op": "PUSH4",
      "value": "0xE18E09BD"
    },
    "212": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "214": {
      "op": "SHL"
    },
    "215": {
      "fn": "ERC4671Store.supportsInterface",
      "offset": [
        2037,
        2083
      ],
      "op": "EQ",
      "path": "10"
    },
    "216": {
      "fn": "ERC4671Store.supportsInterface",
      "offset": [
        2037,
        2083
      ],
      "op": "DUP1",
      "path": "10"
    },
    "217": {
      "fn": "ERC4671Store.supportsInterface",
      "offset": [
        2037,
        2135
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF2"
    },
    "220": {
      "fn": "ERC4671Store.supportsInterface",
      "offset": [
        2037,
        2135
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "221": {
      "op": "POP"
    },
    "222": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "227": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "229": {
      "op": "SHL"
    },
    "230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "234": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "236": {
      "op": "SHL"
    },
    "237": {
      "op": "SUB"
    },
    "238": {
      "op": "NOT"
    },
    "239": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 1
    },
    "240": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "AND",
      "path": "2"
    },
    "241": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "EQ",
      "path": "2"
    },
    "242": {
      "fn": "ERC4671Store.supportsInterface",
      "offset": [
        2099,
        2135
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "243": {
      "fn": "ERC4671Store.supportsInterface",
      "offset": [
        2018,
        2135
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "244": {
      "fn": "ERC4671Store.supportsInterface",
      "offset": [
        1856,
        2142
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "245": {
      "op": "POP"
    },
    "246": {
      "op": "POP"
    },
    "247": {
      "fn": "ERC4671Store.supportsInterface",
      "jump": "o",
      "offset": [
        1856,
        2142
      ],
      "op": "JUMP",
      "path": "10"
    },
    "248": {
      "fn": "ERC4671Store.add",
      "offset": [
        609,
        854
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "249": {
      "fn": "ERC4671Store.add",
      "offset": [
        710,
        720
      ],
      "op": "CALLER",
      "path": "10"
    },
    "250": {
      "fn": "ERC4671Store.add",
      "offset": [
        671,
        698
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "252": {
      "fn": "ERC4671Store.add",
      "offset": [
        701,
        721
      ],
      "op": "DUP2",
      "path": "10"
    },
    "253": {
      "fn": "ERC4671Store.add",
      "offset": [
        701,
        721
      ],
      "op": "DUP2",
      "path": "10"
    },
    "254": {
      "fn": "ERC4671Store.add",
      "offset": [
        701,
        721
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "255": {
      "fn": "ERC4671Store.add",
      "offset": [
        701,
        721
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "257": {
      "fn": "ERC4671Store.add",
      "offset": [
        701,
        721
      ],
      "op": "DUP2",
      "path": "10"
    },
    "258": {
      "fn": "ERC4671Store.add",
      "offset": [
        701,
        721
      ],
      "op": "DUP2",
      "path": "10"
    },
    "259": {
      "fn": "ERC4671Store.add",
      "offset": [
        701,
        721
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "260": {
      "fn": "ERC4671Store.add",
      "offset": [
        701,
        721
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "262": {
      "fn": "ERC4671Store.add",
      "offset": [
        701,
        721
      ],
      "op": "DUP1",
      "path": "10"
    },
    "263": {
      "fn": "ERC4671Store.add",
      "offset": [
        701,
        721
      ],
      "op": "DUP4",
      "path": "10"
    },
    "264": {
      "fn": "ERC4671Store.add",
      "offset": [
        701,
        721
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "265": {
      "fn": "ERC4671Store.add",
      "offset": [
        761,
        777
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 2
    },
    "266": {
      "fn": "ERC4671Store.add",
      "offset": [
        761,
        777
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "267": {
      "fn": "ERC4671Store.add",
      "offset": [
        731,
        739
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "269": {
      "fn": "ERC4671Store.add",
      "offset": [
        731,
        751
      ],
      "op": "DUP1",
      "path": "10"
    },
    "270": {
      "fn": "ERC4671Store.add",
      "offset": [
        731,
        751
      ],
      "op": "DUP6",
      "path": "10"
    },
    "271": {
      "fn": "ERC4671Store.add",
      "offset": [
        731,
        751
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "272": {
      "fn": "ERC4671Store.add",
      "offset": [
        731,
        751
      ],
      "op": "DUP4",
      "path": "10"
    },
    "273": {
      "fn": "ERC4671Store.add",
      "offset": [
        731,
        751
      ],
      "op": "DUP7",
      "path": "10"
    },
    "274": {
      "fn": "ERC4671Store.add",
      "offset": [
        731,
        751
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "279": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "281": {
      "op": "SHL"
    },
    "282": {
      "op": "SUB"
    },
    "283": {
      "fn": "ERC4671Store.add",
      "offset": [
        731,
        758
      ],
      "op": "DUP10",
      "path": "10"
    },
    "284": {
      "fn": "ERC4671Store.add",
      "offset": [
        731,
        758
      ],
      "op": "AND",
      "path": "10"
    },
    "285": {
      "fn": "ERC4671Store.add",
      "offset": [
        731,
        758
      ],
      "op": "DUP1",
      "path": "10"
    },
    "286": {
      "fn": "ERC4671Store.add",
      "offset": [
        731,
        758
      ],
      "op": "DUP9",
      "path": "10"
    },
    "287": {
      "fn": "ERC4671Store.add",
      "offset": [
        731,
        758
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "288": {
      "fn": "ERC4671Store.add",
      "offset": [
        731,
        758
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "289": {
      "fn": "ERC4671Store.add",
      "offset": [
        731,
        758
      ],
      "op": "DUP7",
      "path": "10"
    },
    "290": {
      "fn": "ERC4671Store.add",
      "offset": [
        731,
        758
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "291": {
      "fn": "ERC4671Store.add",
      "offset": [
        731,
        758
      ],
      "op": "DUP5",
      "path": "10"
    },
    "292": {
      "fn": "ERC4671Store.add",
      "offset": [
        731,
        758
      ],
      "op": "DUP8",
      "path": "10"
    },
    "293": {
      "fn": "ERC4671Store.add",
      "offset": [
        731,
        758
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "294": {
      "fn": "ERC4671Store.add",
      "offset": [
        731,
        777
      ],
      "op": "DUP4",
      "path": "10"
    },
    "295": {
      "fn": "ERC4671Store.add",
      "offset": [
        731,
        777
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "296": {
      "fn": "ERC4671Store.add",
      "offset": [
        731,
        777
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "297": {
      "fn": "ERC4671Store.add",
      "offset": [
        787,
        808
      ],
      "op": "SWAP1",
      "path": "10",
      "statement": 3
    },
    "298": {
      "fn": "ERC4671Store.add",
      "offset": [
        787,
        808
      ],
      "op": "DUP3",
      "path": "10"
    },
    "299": {
      "fn": "ERC4671Store.add",
      "offset": [
        787,
        808
      ],
      "op": "ADD",
      "path": "10"
    },
    "300": {
      "fn": "ERC4671Store.add",
      "offset": [
        787,
        808
      ],
      "op": "DUP4",
      "path": "10"
    },
    "301": {
      "fn": "ERC4671Store.add",
      "offset": [
        787,
        808
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "302": {
      "fn": "ERC4671Store.add",
      "offset": [
        787,
        808
      ],
      "op": "DUP3",
      "path": "10"
    },
    "303": {
      "fn": "ERC4671Store.add",
      "offset": [
        787,
        808
      ],
      "op": "DUP7",
      "path": "10"
    },
    "304": {
      "fn": "ERC4671Store.add",
      "offset": [
        787,
        808
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "305": {
      "fn": "ERC4671Store.add",
      "offset": [
        787,
        808
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "306": {
      "fn": "ERC4671Store.add",
      "offset": [
        787,
        808
      ],
      "op": "DUP5",
      "path": "10"
    },
    "307": {
      "fn": "ERC4671Store.add",
      "offset": [
        787,
        808
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "308": {
      "fn": "ERC4671Store.add",
      "offset": [
        787,
        808
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "309": {
      "fn": "ERC4671Store.add",
      "offset": [
        787,
        808
      ],
      "op": "ADD",
      "path": "10"
    },
    "310": {
      "fn": "ERC4671Store.add",
      "offset": [
        787,
        808
      ],
      "op": "DUP1",
      "path": "10"
    },
    "311": {
      "fn": "ERC4671Store.add",
      "offset": [
        787,
        808
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "314": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "316": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "318": {
      "op": "SHL"
    },
    "319": {
      "op": "SUB"
    },
    "320": {
      "op": "NOT"
    },
    "321": {
      "fn": "ERC4671Store.add",
      "offset": [
        787,
        808
      ],
      "op": "AND",
      "path": "10"
    },
    "322": {
      "fn": "ERC4671Store.add",
      "offset": [
        787,
        808
      ],
      "op": "DUP6",
      "path": "10"
    },
    "323": {
      "fn": "ERC4671Store.add",
      "offset": [
        787,
        808
      ],
      "op": "OR",
      "path": "10"
    },
    "324": {
      "fn": "ERC4671Store.add",
      "offset": [
        787,
        808
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "325": {
      "fn": "ERC4671Store.add",
      "offset": [
        787,
        808
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "326": {
      "fn": "ERC4671Store.add",
      "offset": [
        823,
        847
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 4
    },
    "327": {
      "fn": "ERC4671Store.add",
      "offset": [
        823,
        847
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "328": {
      "op": "SWAP5"
    },
    "329": {
      "op": "DUP6"
    },
    "330": {
      "op": "MSTORE"
    },
    "331": {
      "op": "SWAP2"
    },
    "332": {
      "op": "DUP5"
    },
    "333": {
      "op": "ADD"
    },
    "334": {
      "op": "SWAP3"
    },
    "335": {
      "op": "SWAP1"
    },
    "336": {
      "op": "SWAP3"
    },
    "337": {
      "op": "MSTORE"
    },
    "338": {
      "fn": "ERC4671Store.add",
      "offset": [
        701,
        721
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "339": {
      "fn": "ERC4671Store.add",
      "offset": [
        823,
        847
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x938C63AC3D228B23F6BEE7618FEFC6790522E338AC202C958A2EA9EB9706C5D1"
    },
    "372": {
      "fn": "ERC4671Store.add",
      "offset": [
        823,
        847
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "373": {
      "op": "ADD"
    },
    "374": {
      "fn": "ERC4671Store.add",
      "offset": [
        823,
        847
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "376": {
      "fn": "ERC4671Store.add",
      "offset": [
        823,
        847
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "377": {
      "fn": "ERC4671Store.add",
      "offset": [
        823,
        847
      ],
      "op": "DUP1",
      "path": "10"
    },
    "378": {
      "fn": "ERC4671Store.add",
      "offset": [
        823,
        847
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "379": {
      "fn": "ERC4671Store.add",
      "offset": [
        823,
        847
      ],
      "op": "SUB",
      "path": "10"
    },
    "380": {
      "fn": "ERC4671Store.add",
      "offset": [
        823,
        847
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "381": {
      "fn": "ERC4671Store.add",
      "offset": [
        823,
        847
      ],
      "op": "LOG1",
      "path": "10"
    },
    "382": {
      "fn": "ERC4671Store.add",
      "offset": [
        661,
        854
      ],
      "op": "POP",
      "path": "10"
    },
    "383": {
      "fn": "ERC4671Store.add",
      "offset": [
        609,
        854
      ],
      "op": "POP",
      "path": "10"
    },
    "384": {
      "fn": "ERC4671Store.add",
      "jump": "o",
      "offset": [
        609,
        854
      ],
      "op": "JUMP",
      "path": "10"
    },
    "385": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1012,
        1518
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "386": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1077,
        1090
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "388": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1093,
        1133
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x18D"
    },
    "391": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1115,
        1125
      ],
      "op": "CALLER",
      "path": "10"
    },
    "392": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1127,
        1132
      ],
      "op": "DUP4",
      "path": "10"
    },
    "393": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1093,
        1114
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3AF"
    },
    "396": {
      "fn": "ERC4671Store.remove",
      "jump": "i",
      "offset": [
        1093,
        1133
      ],
      "op": "JUMP",
      "path": "10"
    },
    "397": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1093,
        1133
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "398": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1182,
        1192
      ],
      "op": "CALLER",
      "path": "10"
    },
    "399": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1143,
        1170
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "401": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1173,
        1193
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "402": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1173,
        1193
      ],
      "op": "DUP2",
      "path": "10"
    },
    "403": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1173,
        1193
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "404": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1173,
        1193
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "406": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1173,
        1193
      ],
      "op": "DUP2",
      "path": "10"
    },
    "407": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1173,
        1193
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "408": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1173,
        1193
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "409": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1173,
        1193
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "411": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1173,
        1193
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "412": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1173,
        1193
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "413": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1216,
        1232
      ],
      "op": "DUP1",
      "path": "10"
    },
    "414": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1216,
        1232
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "415": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1077,
        1133
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "416": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1077,
        1133
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "417": {
      "op": "POP"
    },
    "418": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1173,
        1193
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "419": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1216,
        1236
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1AE"
    },
    "422": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1216,
        1236
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "423": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1235,
        1236
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "425": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1235,
        1236
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "426": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1216,
        1236
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4E7"
    },
    "429": {
      "fn": "ERC4671Store.remove",
      "jump": "i",
      "offset": [
        1216,
        1236
      ],
      "op": "JUMP",
      "path": "10"
    },
    "430": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1216,
        1236
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "431": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1207,
        1212
      ],
      "op": "DUP3",
      "path": "10"
    },
    "432": {
      "branch": 13,
      "fn": "ERC4671Store.remove",
      "offset": [
        1207,
        1236
      ],
      "op": "EQ",
      "path": "10"
    },
    "433": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1203,
        1386
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "434": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1203,
        1386
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1DE"
    },
    "437": {
      "branch": 13,
      "fn": "ERC4671Store.remove",
      "offset": [
        1203,
        1386
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "438": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1261,
        1271
      ],
      "op": "CALLER",
      "path": "10",
      "statement": 5
    },
    "439": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1282,
        1283
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "441": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1252,
        1272
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "442": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1252,
        1272
      ],
      "op": "DUP2",
      "path": "10"
    },
    "443": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1252,
        1272
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "444": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1252,
        1260
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "446": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1252,
        1272
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "448": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1252,
        1272
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "449": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1252,
        1272
      ],
      "op": "DUP2",
      "path": "10"
    },
    "450": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1252,
        1272
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "451": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1252,
        1272
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "453": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1252,
        1272
      ],
      "op": "DUP1",
      "path": "10"
    },
    "454": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1252,
        1272
      ],
      "op": "DUP4",
      "path": "10"
    },
    "455": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1252,
        1272
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "458": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "460": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "462": {
      "op": "SHL"
    },
    "463": {
      "op": "SUB"
    },
    "464": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1252,
        1279
      ],
      "op": "DUP8",
      "path": "10"
    },
    "465": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1252,
        1279
      ],
      "op": "AND",
      "path": "10"
    },
    "466": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1252,
        1279
      ],
      "op": "DUP5",
      "path": "10"
    },
    "467": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1252,
        1279
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "468": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1252,
        1279
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "469": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1252,
        1279
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "470": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1252,
        1279
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "471": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1252,
        1279
      ],
      "op": "DUP2",
      "path": "10"
    },
    "472": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1252,
        1279
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "473": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1252,
        1283
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "474": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1203,
        1386
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x237"
    },
    "477": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1203,
        1386
      ],
      "op": "JUMP",
      "path": "10"
    },
    "478": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1203,
        1386
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "479": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1323,
        1333
      ],
      "op": "CALLER",
      "path": "10",
      "statement": 6
    },
    "480": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1314,
        1334
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "482": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1314,
        1334
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "483": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1314,
        1334
      ],
      "op": "DUP2",
      "path": "10"
    },
    "484": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1314,
        1334
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "485": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1314,
        1322
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "487": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1314,
        1334
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "489": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1314,
        1334
      ],
      "op": "DUP2",
      "path": "10"
    },
    "490": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1314,
        1334
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "491": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1314,
        1334
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "492": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1314,
        1334
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "494": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1314,
        1334
      ],
      "op": "DUP3",
      "path": "10"
    },
    "495": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1314,
        1334
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "496": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1345,
        1361
      ],
      "op": "DUP4",
      "path": "10"
    },
    "497": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1345,
        1361
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "498": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1370,
        1375
      ],
      "op": "DUP6",
      "path": "10"
    },
    "499": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1370,
        1375
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "500": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1314,
        1334
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "501": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1314,
        1334
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "502": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1335,
        1344
      ],
      "op": "DUP6",
      "path": "10"
    },
    "503": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1335,
        1344
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "504": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1345,
        1365
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x201"
    },
    "507": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1345,
        1365
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "508": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1314,
        1322
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "509": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1345,
        1365
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4E7"
    },
    "512": {
      "fn": "ERC4671Store.remove",
      "jump": "i",
      "offset": [
        1345,
        1365
      ],
      "op": "JUMP",
      "path": "10"
    },
    "513": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1345,
        1365
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "514": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1335,
        1366
      ],
      "op": "DUP2",
      "path": "10"
    },
    "515": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1335,
        1366
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "516": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1335,
        1366
      ],
      "op": "DUP2",
      "path": "10"
    },
    "517": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1335,
        1366
      ],
      "op": "LT",
      "path": "10"
    },
    "518": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1335,
        1366
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x211"
    },
    "521": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1335,
        1366
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "522": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1335,
        1366
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x211"
    },
    "525": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1335,
        1366
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x50C"
    },
    "528": {
      "fn": "ERC4671Store.remove",
      "jump": "i",
      "offset": [
        1335,
        1366
      ],
      "op": "JUMP",
      "path": "10"
    },
    "529": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1335,
        1366
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "530": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1335,
        1366
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "532": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1335,
        1366
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "533": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1335,
        1366
      ],
      "op": "DUP3",
      "path": "10"
    },
    "534": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1335,
        1366
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "535": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1335,
        1366
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "537": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1335,
        1366
      ],
      "op": "DUP1",
      "path": "10"
    },
    "538": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1335,
        1366
      ],
      "op": "DUP4",
      "path": "10"
    },
    "539": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1335,
        1366
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "540": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1335,
        1366
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "541": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1335,
        1366
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "542": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1335,
        1366
      ],
      "op": "ADD",
      "path": "10"
    },
    "543": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1335,
        1366
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "544": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "546": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "548": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "550": {
      "op": "SHL"
    },
    "551": {
      "op": "SUB"
    },
    "552": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1335,
        1366
      ],
      "op": "AND",
      "path": "10"
    },
    "553": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1314,
        1367
      ],
      "op": "DUP4",
      "path": "10"
    },
    "554": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1314,
        1367
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "555": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1314,
        1367
      ],
      "op": "DUP3",
      "path": "10"
    },
    "556": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1314,
        1367
      ],
      "op": "ADD",
      "path": "10"
    },
    "557": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1314,
        1367
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "558": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1314,
        1367
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "559": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1314,
        1367
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "560": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1314,
        1367
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "561": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1314,
        1367
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "563": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1314,
        1367
      ],
      "op": "ADD",
      "path": "10"
    },
    "564": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1314,
        1367
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "565": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1314,
        1367
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "566": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1314,
        1375
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "567": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1203,
        1386
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "568": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1424,
        1440
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 7
    },
    "569": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1424,
        1440
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "570": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1414,
        1423
      ],
      "op": "DUP2",
      "path": "10"
    },
    "571": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1414,
        1423
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "572": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1424,
        1444
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x247"
    },
    "575": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1424,
        1444
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "576": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1443,
        1444
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "578": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1443,
        1444
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "579": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1424,
        1444
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4E7"
    },
    "582": {
      "fn": "ERC4671Store.remove",
      "jump": "i",
      "offset": [
        1424,
        1444
      ],
      "op": "JUMP",
      "path": "10"
    },
    "583": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1424,
        1444
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "584": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1414,
        1445
      ],
      "op": "DUP2",
      "path": "10"
    },
    "585": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1414,
        1445
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "586": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1414,
        1445
      ],
      "op": "DUP2",
      "path": "10"
    },
    "587": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1414,
        1445
      ],
      "op": "LT",
      "path": "10"
    },
    "588": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1414,
        1445
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x257"
    },
    "591": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1414,
        1445
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "592": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1414,
        1445
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x257"
    },
    "595": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1414,
        1445
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x50C"
    },
    "598": {
      "fn": "ERC4671Store.remove",
      "jump": "i",
      "offset": [
        1414,
        1445
      ],
      "op": "JUMP",
      "path": "10"
    },
    "599": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1414,
        1445
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "600": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1414,
        1445
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "601": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1414,
        1445
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "603": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1414,
        1445
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "604": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1414,
        1445
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "606": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1414,
        1445
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "608": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1414,
        1445
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "609": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1414,
        1445
      ],
      "op": "ADD",
      "path": "10"
    },
    "610": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1414,
        1445
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "612": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1414,
        1445
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "613": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1414,
        1445
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "614": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1414,
        1445
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "615": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1414,
        1445
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x100"
    },
    "618": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1414,
        1445
      ],
      "op": "EXP",
      "path": "10"
    },
    "619": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1414,
        1445
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "620": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1414,
        1445
      ],
      "op": "DIV",
      "path": "10"
    },
    "621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "623": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "625": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "627": {
      "op": "SHL"
    },
    "628": {
      "op": "SUB"
    },
    "629": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1414,
        1445
      ],
      "op": "AND",
      "path": "10"
    },
    "630": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1395,
        1404
      ],
      "op": "DUP2",
      "path": "10"
    },
    "631": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1405,
        1410
      ],
      "op": "DUP4",
      "path": "10"
    },
    "632": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1395,
        1411
      ],
      "op": "DUP2",
      "path": "10"
    },
    "633": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1395,
        1411
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "634": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1395,
        1411
      ],
      "op": "DUP2",
      "path": "10"
    },
    "635": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1395,
        1411
      ],
      "op": "LT",
      "path": "10"
    },
    "636": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1395,
        1411
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x287"
    },
    "639": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1395,
        1411
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "640": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1395,
        1411
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x287"
    },
    "643": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1395,
        1411
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x50C"
    },
    "646": {
      "fn": "ERC4671Store.remove",
      "jump": "i",
      "offset": [
        1395,
        1411
      ],
      "op": "JUMP",
      "path": "10"
    },
    "647": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1395,
        1411
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "648": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1395,
        1411
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "649": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1395,
        1411
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "651": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1395,
        1411
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "652": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1395,
        1411
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "654": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1395,
        1411
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "656": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1395,
        1411
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "657": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1395,
        1411
      ],
      "op": "ADD",
      "path": "10"
    },
    "658": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1395,
        1411
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "660": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1395,
        1445
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x100"
    },
    "663": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1395,
        1445
      ],
      "op": "EXP",
      "path": "10"
    },
    "664": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1395,
        1445
      ],
      "op": "DUP2",
      "path": "10"
    },
    "665": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1395,
        1445
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "666": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1395,
        1445
      ],
      "op": "DUP2",
      "path": "10"
    },
    "667": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "671": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "673": {
      "op": "SHL"
    },
    "674": {
      "op": "SUB"
    },
    "675": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1395,
        1445
      ],
      "op": "MUL",
      "path": "10"
    },
    "676": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1395,
        1445
      ],
      "op": "NOT",
      "path": "10"
    },
    "677": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1395,
        1445
      ],
      "op": "AND",
      "path": "10"
    },
    "678": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1395,
        1445
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "679": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1395,
        1445
      ],
      "op": "DUP4",
      "path": "10"
    },
    "680": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "682": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "684": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "686": {
      "op": "SHL"
    },
    "687": {
      "op": "SUB"
    },
    "688": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1395,
        1445
      ],
      "op": "AND",
      "path": "10"
    },
    "689": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1395,
        1445
      ],
      "op": "MUL",
      "path": "10"
    },
    "690": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1395,
        1445
      ],
      "op": "OR",
      "path": "10"
    },
    "691": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1395,
        1445
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "692": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1395,
        1445
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "693": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1395,
        1445
      ],
      "op": "POP",
      "path": "10"
    },
    "694": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1455,
        1464
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 8
    },
    "695": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1455,
        1470
      ],
      "op": "DUP1",
      "path": "10"
    },
    "696": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1455,
        1470
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "697": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1455,
        1470
      ],
      "op": "DUP1",
      "path": "10"
    },
    "698": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1455,
        1470
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2C5"
    },
    "701": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1455,
        1470
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "702": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1455,
        1470
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2C5"
    },
    "705": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1455,
        1470
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x522"
    },
    "708": {
      "fn": "ERC4671Store.remove",
      "jump": "i",
      "offset": [
        1455,
        1470
      ],
      "op": "JUMP",
      "path": "10"
    },
    "709": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1455,
        1470
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "710": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1455,
        1470
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "712": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1455,
        1470
      ],
      "op": "DUP3",
      "path": "10"
    },
    "713": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1455,
        1470
      ],
      "op": "DUP2",
      "path": "10"
    },
    "714": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1455,
        1470
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "715": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1455,
        1470
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "717": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1455,
        1470
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "718": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1455,
        1470
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "719": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1455,
        1470
      ],
      "op": "DUP2",
      "path": "10"
    },
    "720": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1455,
        1470
      ],
      "op": "ADD",
      "path": "10"
    },
    "721": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "723": {
      "op": "NOT"
    },
    "724": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1455,
        1470
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "725": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1455,
        1470
      ],
      "op": "DUP2",
      "path": "10"
    },
    "726": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1455,
        1470
      ],
      "op": "ADD",
      "path": "10"
    },
    "727": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1455,
        1470
      ],
      "op": "DUP1",
      "path": "10"
    },
    "728": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1455,
        1470
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "731": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "733": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "735": {
      "op": "SHL"
    },
    "736": {
      "op": "SUB"
    },
    "737": {
      "op": "NOT"
    },
    "738": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1455,
        1470
      ],
      "op": "AND",
      "path": "10"
    },
    "739": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1455,
        1470
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "740": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1455,
        1470
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "741": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1455,
        1470
      ],
      "op": "ADD",
      "path": "10"
    },
    "742": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1455,
        1470
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "743": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1455,
        1470
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "744": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1485,
        1511
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 9,
      "value": "0x40"
    },
    "746": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1485,
        1511
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "747": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1485,
        1511
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x40E634D0E26D9EC2E860E4DD9B7B2CFBB569B6058362A1A54D3A94718BC49587"
    },
    "780": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1485,
        1511
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "781": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1485,
        1511
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x32E"
    },
    "784": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1485,
        1511
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "785": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1493,
        1503
      ],
      "op": "CALLER",
      "path": "10"
    },
    "786": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1493,
        1503
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "787": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1505,
        1510
      ],
      "op": "DUP7",
      "path": "10"
    },
    "788": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1505,
        1510
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "793": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "795": {
      "op": "SHL"
    },
    "796": {
      "op": "SUB"
    },
    "797": {
      "op": "SWAP3"
    },
    "798": {
      "op": "DUP4"
    },
    "799": {
      "op": "AND"
    },
    "800": {
      "op": "DUP2"
    },
    "801": {
      "op": "MSTORE"
    },
    "802": {
      "op": "SWAP2"
    },
    "803": {
      "op": "AND"
    },
    "804": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "806": {
      "op": "DUP3"
    },
    "807": {
      "op": "ADD"
    },
    "808": {
      "op": "MSTORE"
    },
    "809": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "811": {
      "op": "ADD"
    },
    "812": {
      "op": "SWAP1"
    },
    "813": {
      "op": "JUMP"
    },
    "814": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1485,
        1511
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "815": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1485,
        1511
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "817": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1485,
        1511
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "818": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1485,
        1511
      ],
      "op": "DUP1",
      "path": "10"
    },
    "819": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1485,
        1511
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "820": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1485,
        1511
      ],
      "op": "SUB",
      "path": "10"
    },
    "821": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1485,
        1511
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "822": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1485,
        1511
      ],
      "op": "LOG1",
      "path": "10"
    },
    "823": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1067,
        1518
      ],
      "op": "POP",
      "path": "10"
    },
    "824": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1067,
        1518
      ],
      "op": "POP",
      "path": "10"
    },
    "825": {
      "fn": "ERC4671Store.remove",
      "offset": [
        1012,
        1518
      ],
      "op": "POP",
      "path": "10"
    },
    "826": {
      "fn": "ERC4671Store.remove",
      "jump": "o",
      "offset": [
        1012,
        1518
      ],
      "op": "JUMP",
      "path": "10"
    },
    "827": {
      "fn": "ERC4671Store.get",
      "offset": [
        1683,
        1850
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "832": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "834": {
      "op": "SHL"
    },
    "835": {
      "op": "SUB"
    },
    "836": {
      "fn": "ERC4671Store.get",
      "offset": [
        1828,
        1843
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 10
    },
    "837": {
      "fn": "ERC4671Store.get",
      "offset": [
        1828,
        1843
      ],
      "op": "AND",
      "path": "10"
    },
    "838": {
      "fn": "ERC4671Store.get",
      "offset": [
        1828,
        1836
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "840": {
      "fn": "ERC4671Store.get",
      "offset": [
        1828,
        1843
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "841": {
      "fn": "ERC4671Store.get",
      "offset": [
        1828,
        1843
      ],
      "op": "DUP2",
      "path": "10"
    },
    "842": {
      "fn": "ERC4671Store.get",
      "offset": [
        1828,
        1843
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "843": {
      "fn": "ERC4671Store.get",
      "offset": [
        1828,
        1843
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "845": {
      "fn": "ERC4671Store.get",
      "offset": [
        1828,
        1843
      ],
      "op": "DUP2",
      "path": "10"
    },
    "846": {
      "fn": "ERC4671Store.get",
      "offset": [
        1828,
        1843
      ],
      "op": "DUP2",
      "path": "10"
    },
    "847": {
      "fn": "ERC4671Store.get",
      "offset": [
        1828,
        1843
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "848": {
      "fn": "ERC4671Store.get",
      "offset": [
        1828,
        1843
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "850": {
      "fn": "ERC4671Store.get",
      "offset": [
        1828,
        1843
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "851": {
      "fn": "ERC4671Store.get",
      "offset": [
        1828,
        1843
      ],
      "op": "DUP3",
      "path": "10"
    },
    "852": {
      "fn": "ERC4671Store.get",
      "offset": [
        1828,
        1843
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "853": {
      "fn": "ERC4671Store.get",
      "offset": [
        1828,
        1843
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "854": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "DUP1",
      "path": "10"
    },
    "855": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "856": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "DUP4",
      "path": "10"
    },
    "857": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "858": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "DUP2",
      "path": "10"
    },
    "859": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "DUP5",
      "path": "10"
    },
    "860": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "MUL",
      "path": "10"
    },
    "861": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "DUP2",
      "path": "10"
    },
    "862": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "ADD",
      "path": "10"
    },
    "863": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "DUP5",
      "path": "10"
    },
    "864": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "ADD",
      "path": "10"
    },
    "865": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "866": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "867": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "868": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "DUP1",
      "path": "10"
    },
    "869": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "DUP5",
      "path": "10"
    },
    "870": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "871": {
      "fn": "ERC4671Store.get",
      "offset": [
        1789,
        1805
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "873": {
      "fn": "ERC4671Store.get",
      "offset": [
        1789,
        1805
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "874": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "875": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "DUP4",
      "path": "10"
    },
    "876": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "ADD",
      "path": "10"
    },
    "877": {
      "fn": "ERC4671Store.get",
      "offset": [
        1828,
        1843
      ],
      "op": "DUP3",
      "path": "10"
    },
    "878": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "DUP3",
      "path": "10"
    },
    "879": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "DUP1",
      "path": "10"
    },
    "880": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "881": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3A3"
    },
    "884": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "885": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "887": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "MUL",
      "path": "10"
    },
    "888": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "DUP3",
      "path": "10"
    },
    "889": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "ADD",
      "path": "10"
    },
    "890": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "891": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "892": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "894": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "895": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "897": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "899": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "900": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "901": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "902": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "DUP2",
      "path": "10"
    },
    "903": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "908": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "910": {
      "op": "SHL"
    },
    "911": {
      "op": "SUB"
    },
    "912": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "AND",
      "path": "10"
    },
    "913": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "DUP2",
      "path": "10"
    },
    "914": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "915": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "917": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "918": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "919": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "ADD",
      "path": "10"
    },
    "920": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "921": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "923": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "ADD",
      "path": "10"
    },
    "924": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "DUP1",
      "path": "10"
    },
    "925": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "DUP4",
      "path": "10"
    },
    "926": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "GT",
      "path": "10"
    },
    "927": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x385"
    },
    "930": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "931": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "932": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "POP",
      "path": "10"
    },
    "933": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "POP",
      "path": "10"
    },
    "934": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "POP",
      "path": "10"
    },
    "935": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "POP",
      "path": "10"
    },
    "936": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "POP",
      "path": "10"
    },
    "937": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "938": {
      "fn": "ERC4671Store.get",
      "offset": [
        1821,
        1843
      ],
      "op": "POP",
      "path": "10"
    },
    "939": {
      "fn": "ERC4671Store.get",
      "offset": [
        1683,
        1850
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "940": {
      "fn": "ERC4671Store.get",
      "offset": [
        1683,
        1850
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "941": {
      "fn": "ERC4671Store.get",
      "offset": [
        1683,
        1850
      ],
      "op": "POP",
      "path": "10"
    },
    "942": {
      "fn": "ERC4671Store.get",
      "jump": "o",
      "offset": [
        1683,
        1850
      ],
      "op": "JUMP",
      "path": "10"
    },
    "943": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2148,
        2424
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "944": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "946": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "948": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "950": {
      "op": "SHL"
    },
    "951": {
      "op": "SUB"
    },
    "952": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2294,
        2309
      ],
      "op": "DUP1",
      "path": "10"
    },
    "953": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2294,
        2309
      ],
      "op": "DUP4",
      "path": "10"
    },
    "954": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2294,
        2309
      ],
      "op": "AND",
      "path": "10"
    },
    "955": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2255,
        2262
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "957": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2294,
        2309
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "958": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2294,
        2309
      ],
      "op": "DUP2",
      "path": "10"
    },
    "959": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2294,
        2309
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "960": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2294,
        2302
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "962": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2294,
        2309
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "964": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2294,
        2309
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "965": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2294,
        2309
      ],
      "op": "DUP2",
      "path": "10"
    },
    "966": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2294,
        2309
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "967": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2294,
        2309
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "969": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2294,
        2309
      ],
      "op": "DUP1",
      "path": "10"
    },
    "970": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2294,
        2309
      ],
      "op": "DUP4",
      "path": "10"
    },
    "971": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2294,
        2309
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "972": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2294,
        2316
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "973": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2294,
        2316
      ],
      "op": "DUP6",
      "path": "10"
    },
    "974": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2294,
        2316
      ],
      "op": "AND",
      "path": "10"
    },
    "975": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2294,
        2316
      ],
      "op": "DUP4",
      "path": "10"
    },
    "976": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2294,
        2316
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "977": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2294,
        2316
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "978": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2294,
        2316
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "979": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2294,
        2316
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "980": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2294,
        2316
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "981": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2294,
        2316
      ],
      "op": "DUP2",
      "path": "10"
    },
    "982": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2294,
        2316
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "983": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2294,
        2316
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "984": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2334,
        2343
      ],
      "op": "DUP1",
      "path": "10",
      "statement": 11
    },
    "985": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2334,
        2343
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "986": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2334,
        2343
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "987": {
      "branch": 14,
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2334,
        2343
      ],
      "op": "DUP1",
      "path": "10"
    },
    "988": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2334,
        2373
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3FC"
    },
    "991": {
      "branch": 14,
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2334,
        2373
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "992": {
      "op": "POP"
    },
    "993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "997": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "999": {
      "op": "SHL"
    },
    "1000": {
      "op": "SUB"
    },
    "1001": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2347,
        2362
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1002": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2347,
        2362
      ],
      "op": "AND",
      "path": "10"
    },
    "1003": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2372,
        2373
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1005": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2347,
        2362
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1006": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2347,
        2362
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1007": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2347,
        2362
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1008": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2347,
        2362
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1010": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2347,
        2362
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1011": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2347,
        2362
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1012": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2347,
        2362
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1013": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2347,
        2362
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1015": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2347,
        2362
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1016": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2347,
        2362
      ],
      "op": "KECCAK256",
      "path": "10"
    },
    "1017": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2347,
        2369
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1018": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2347,
        2373
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1019": {
      "branch": 15,
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2347,
        2373
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1020": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2334,
        2373
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1021": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2326,
        2395
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x440"
    },
    "1024": {
      "branch": 15,
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2326,
        2395
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1025": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2326,
        2395
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1027": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2326,
        2395
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1028": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1032": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1034": {
      "op": "SHL"
    },
    "1035": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2326,
        2395
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1036": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2326,
        2395
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1037": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1039": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2326,
        2395
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1041": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2326,
        2395
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1042": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2326,
        2395
      ],
      "op": "ADD",
      "path": "10"
    },
    "1043": {
      "op": "MSTORE"
    },
    "1044": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1046": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1048": {
      "op": "DUP3"
    },
    "1049": {
      "op": "ADD"
    },
    "1050": {
      "op": "MSTORE"
    },
    "1051": {
      "op": "PUSH17",
      "value": "0x1059191C995CDCC81B9BDD08199BDD5B99"
    },
    "1069": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "1071": {
      "op": "SHL"
    },
    "1072": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1074": {
      "op": "DUP3"
    },
    "1075": {
      "op": "ADD"
    },
    "1076": {
      "op": "MSTORE"
    },
    "1077": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1079": {
      "op": "ADD"
    },
    "1080": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2326,
        2395
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1082": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2326,
        2395
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1083": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2326,
        2395
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1084": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2326,
        2395
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1085": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2326,
        2395
      ],
      "op": "SUB",
      "path": "10"
    },
    "1086": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2326,
        2395
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1087": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2326,
        2395
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "10"
    },
    "1088": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2326,
        2395
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1089": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2412,
        2417
      ],
      "op": "SWAP4",
      "path": "10",
      "statement": 12
    },
    "1090": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "offset": [
        2148,
        2424
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1091": {
      "op": "POP"
    },
    "1092": {
      "op": "POP"
    },
    "1093": {
      "op": "POP"
    },
    "1094": {
      "fn": "ERC4671Store._indexOfTokenOrRevert",
      "jump": "o",
      "offset": [
        2148,
        2424
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1095": {
      "op": "JUMPDEST"
    },
    "1096": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1098": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1100": {
      "op": "DUP3"
    },
    "1101": {
      "op": "DUP5"
    },
    "1102": {
      "op": "SUB"
    },
    "1103": {
      "op": "SLT"
    },
    "1104": {
      "op": "ISZERO"
    },
    "1105": {
      "op": "PUSH2",
      "value": "0x459"
    },
    "1108": {
      "op": "JUMPI"
    },
    "1109": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1111": {
      "op": "DUP1"
    },
    "1112": {
      "op": "REVERT"
    },
    "1113": {
      "op": "JUMPDEST"
    },
    "1114": {
      "op": "DUP2"
    },
    "1115": {
      "op": "CALLDATALOAD"
    },
    "1116": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1118": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1120": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1122": {
      "op": "SHL"
    },
    "1123": {
      "op": "SUB"
    },
    "1124": {
      "op": "NOT"
    },
    "1125": {
      "op": "DUP2"
    },
    "1126": {
      "op": "AND"
    },
    "1127": {
      "op": "DUP2"
    },
    "1128": {
      "op": "EQ"
    },
    "1129": {
      "op": "PUSH2",
      "value": "0x440"
    },
    "1132": {
      "op": "JUMPI"
    },
    "1133": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1135": {
      "op": "DUP1"
    },
    "1136": {
      "op": "REVERT"
    },
    "1137": {
      "op": "JUMPDEST"
    },
    "1138": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1140": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1142": {
      "op": "DUP3"
    },
    "1143": {
      "op": "DUP5"
    },
    "1144": {
      "op": "SUB"
    },
    "1145": {
      "op": "SLT"
    },
    "1146": {
      "op": "ISZERO"
    },
    "1147": {
      "op": "PUSH2",
      "value": "0x483"
    },
    "1150": {
      "op": "JUMPI"
    },
    "1151": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1153": {
      "op": "DUP1"
    },
    "1154": {
      "op": "REVERT"
    },
    "1155": {
      "op": "JUMPDEST"
    },
    "1156": {
      "op": "DUP2"
    },
    "1157": {
      "op": "CALLDATALOAD"
    },
    "1158": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1160": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1162": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1164": {
      "op": "SHL"
    },
    "1165": {
      "op": "SUB"
    },
    "1166": {
      "op": "DUP2"
    },
    "1167": {
      "op": "AND"
    },
    "1168": {
      "op": "DUP2"
    },
    "1169": {
      "op": "EQ"
    },
    "1170": {
      "op": "PUSH2",
      "value": "0x440"
    },
    "1173": {
      "op": "JUMPI"
    },
    "1174": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1176": {
      "op": "DUP1"
    },
    "1177": {
      "op": "REVERT"
    },
    "1178": {
      "op": "JUMPDEST"
    },
    "1179": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1181": {
      "op": "DUP1"
    },
    "1182": {
      "op": "DUP3"
    },
    "1183": {
      "op": "MSTORE"
    },
    "1184": {
      "op": "DUP3"
    },
    "1185": {
      "op": "MLOAD"
    },
    "1186": {
      "op": "DUP3"
    },
    "1187": {
      "op": "DUP3"
    },
    "1188": {
      "op": "ADD"
    },
    "1189": {
      "op": "DUP2"
    },
    "1190": {
      "op": "SWAP1"
    },
    "1191": {
      "op": "MSTORE"
    },
    "1192": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1194": {
      "op": "SWAP2"
    },
    "1195": {
      "op": "SWAP1"
    },
    "1196": {
      "op": "DUP5"
    },
    "1197": {
      "op": "DUP3"
    },
    "1198": {
      "op": "ADD"
    },
    "1199": {
      "op": "SWAP1"
    },
    "1200": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1202": {
      "op": "DUP6"
    },
    "1203": {
      "op": "ADD"
    },
    "1204": {
      "op": "SWAP1"
    },
    "1205": {
      "op": "DUP5"
    },
    "1206": {
      "op": "JUMPDEST"
    },
    "1207": {
      "op": "DUP2"
    },
    "1208": {
      "op": "DUP2"
    },
    "1209": {
      "op": "LT"
    },
    "1210": {
      "op": "ISZERO"
    },
    "1211": {
      "op": "PUSH2",
      "value": "0x4DB"
    },
    "1214": {
      "op": "JUMPI"
    },
    "1215": {
      "op": "DUP4"
    },
    "1216": {
      "op": "MLOAD"
    },
    "1217": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1221": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1223": {
      "op": "SHL"
    },
    "1224": {
      "op": "SUB"
    },
    "1225": {
      "op": "AND"
    },
    "1226": {
      "op": "DUP4"
    },
    "1227": {
      "op": "MSTORE"
    },
    "1228": {
      "op": "SWAP3"
    },
    "1229": {
      "op": "DUP5"
    },
    "1230": {
      "op": "ADD"
    },
    "1231": {
      "op": "SWAP3"
    },
    "1232": {
      "op": "SWAP2"
    },
    "1233": {
      "op": "DUP5"
    },
    "1234": {
      "op": "ADD"
    },
    "1235": {
      "op": "SWAP2"
    },
    "1236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1238": {
      "op": "ADD"
    },
    "1239": {
      "op": "PUSH2",
      "value": "0x4B6"
    },
    "1242": {
      "op": "JUMP"
    },
    "1243": {
      "op": "JUMPDEST"
    },
    "1244": {
      "op": "POP"
    },
    "1245": {
      "op": "SWAP1"
    },
    "1246": {
      "op": "SWAP7"
    },
    "1247": {
      "op": "SWAP6"
    },
    "1248": {
      "op": "POP"
    },
    "1249": {
      "op": "POP"
    },
    "1250": {
      "op": "POP"
    },
    "1251": {
      "op": "POP"
    },
    "1252": {
      "op": "POP"
    },
    "1253": {
      "op": "POP"
    },
    "1254": {
      "jump": "o",
      "op": "JUMP"
    },
    "1255": {
      "op": "JUMPDEST"
    },
    "1256": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1258": {
      "op": "DUP3"
    },
    "1259": {
      "op": "DUP3"
    },
    "1260": {
      "op": "LT"
    },
    "1261": {
      "op": "ISZERO"
    },
    "1262": {
      "op": "PUSH2",
      "value": "0x507"
    },
    "1265": {
      "op": "JUMPI"
    },
    "1266": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1271": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1273": {
      "op": "SHL"
    },
    "1274": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1276": {
      "op": "MSTORE"
    },
    "1277": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1279": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1281": {
      "op": "MSTORE"
    },
    "1282": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1284": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1286": {
      "op": "REVERT"
    },
    "1287": {
      "op": "JUMPDEST"
    },
    "1288": {
      "op": "POP"
    },
    "1289": {
      "op": "SUB"
    },
    "1290": {
      "op": "SWAP1"
    },
    "1291": {
      "jump": "o",
      "op": "JUMP"
    },
    "1292": {
      "op": "JUMPDEST"
    },
    "1293": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1298": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1300": {
      "op": "SHL"
    },
    "1301": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1303": {
      "op": "MSTORE"
    },
    "1304": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "1306": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1308": {
      "op": "MSTORE"
    },
    "1309": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1313": {
      "op": "REVERT"
    },
    "1314": {
      "op": "JUMPDEST"
    },
    "1315": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1320": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1322": {
      "op": "SHL"
    },
    "1323": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1325": {
      "op": "MSTORE"
    },
    "1326": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "1328": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1330": {
      "op": "MSTORE"
    },
    "1331": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1333": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1335": {
      "op": "REVERT"
    }
  },
  "sha1": "56601892a9a0816124f2f55aeadd4e5a208cdc4a",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/utils/introspection/ERC165.sol\";\n\nimport \"../interfaces/IERC4671Store.sol\";\n\ncontract ERC4671Store is IERC4671Store, ERC165 {\n    // Mapping from owner to IERC4671Enumerable contracts\n    mapping(address => address[]) private _records;\n\n    // Mapping from owner to IERC4671Enumerable contract index\n    mapping(address => mapping(address => uint256)) _indices;\n\n    /// @notice Add a IERC4671Enumerable contract address to the caller's record\n    /// @param token Address of the IERC4671Enumerable contract to add\n    function add(address token) public virtual override {\n        address[] storage contracts = _records[msg.sender];\n        _indices[msg.sender][token] = contracts.length;\n        contracts.push(token);\n        emit Added(msg.sender, token);\n    }\n\n    /// @notice Remove a IERC4671Enumerable contract from the caller's record\n    /// @param token Address of the IERC4671Enumerable contract to remove\n    function remove(address token) public virtual override {\n        uint256 index = _indexOfTokenOrRevert(msg.sender, token);\n        address[] storage contracts = _records[msg.sender];\n        if (index == contracts.length - 1) {\n            _indices[msg.sender][token] = 0;\n        } else {\n            _indices[msg.sender][contracts[contracts.length - 1]] = index;\n        }\n        contracts[index] = contracts[contracts.length - 1];\n        contracts.pop();\n        emit Removed(msg.sender, token);\n    }\n\n    /// @notice Get all the IERC4671Enumerable contracts for a given owner\n    /// @param owner Address for which to retrieve the IERC4671Enumerable contracts\n    function get(address owner)\n        public\n        view\n        virtual\n        override\n        returns (address[] memory)\n    {\n        return _records[owner];\n    }\n\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        virtual\n        override(ERC165, IERC165)\n        returns (bool)\n    {\n        return\n            interfaceId == type(IERC4671Store).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    function _indexOfTokenOrRevert(address owner, address token)\n        private\n        view\n        returns (uint256)\n    {\n        uint256 index = _indices[owner][token];\n        require(index > 0 || _records[owner].length > 0, \"Address not found\");\n        return index;\n    }\n\n   \n}\n",
  "sourceMap": "167:2264:10:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/ERC4671Store.sol",
  "type": "contract"
}